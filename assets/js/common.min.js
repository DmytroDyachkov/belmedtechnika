$(function(){$.pixlayout({src:"/app.png",opacity:.3,top:4,center:!0,left:-3,right:3,pervious:!0,clip:!0,show:!0},"body"),$(".modal_btn_close,.modal_close,.close_btn,.js-close_modal").click(function(){$(".js-modal_window").fadeOut(),$("body,head,html").css("overflow-x","hidden"),$("body,head,html").css("overflow-y","auto")}),$(".js-open_modal").click(function(){var t=$(this).attr("data-monolit-modal");$(".js-modal_window").each(function(){$(this).attr("data-monolit-modal")==t&&($("body,head,html").css("overflow","hidden"),$(this).fadeIn())})}),$(".js-tabs__title").click(function(){if($(this).hasClass("active"))$(".js-tabs__title").removeClass("active"),$(".js-tabs__content").slideUp(300);else{$(".js-tabs__title").parent(".item").removeClass("active"),$(".js-tabs__title").removeClass("active"),$(this).parent(".item").addClass("active"),$(this).addClass("active"),$(".js-tabs__content").slideUp(300);var t=$(this).attr("data-monolit-tabs");$(".js-tabs__content").each(function(){$(this).attr("data-monolit-tabs")==t&&$(this).slideDown(300)})}}),$(".js-subscribeForm").click(function(){$(this).is(":checked")?(console.log(123),$(this).parents(".js-form--subscribe").find(".js-btnForm").removeAttr("disabled")):(console.log(1223),$(this).parents(".js-form--subscribe").find(".js-btnForm").attr("disabled","disabled"))}),$(".fancybox-media,.content_wp a:has(img)").fancybox({openEffect:"none",closeEffect:"none",maxWidth:"100%",maxHeight:"auto",padding:0,margin:0,helpers:{media:{youtube:{params:{theme:"light",vq:"hd720",css:{body:"color: #fff"}}}}}}),$("#toggle-block").click(function(){1==$(this).parents("#parent-hidden-block").attr("data-click-state")?($(this).parents("#parent-hidden-block").attr("data-click-state",0),$(this).parents("#parent-hidden-block").removeClass("open-block"),$(this).html($(this).attr("open-title"))):($(this).parents("#parent-hidden-block").attr("data-click-state",1),$(this).parents("#parent-hidden-block").addClass("open-block"),$(this).html($(this).attr("close-title")))}),$(".news-carousel").slick({slidesToShow:1,slidesToScroll:1,swipeToSlide:!0,infinite:!0,fade:!0,dots:!1,appendDots:$(".slick-m-dots--news"),prevArrow:$(".slick-m-prev--news"),nextArrow:$(".slick-m-next--news"),variableWidth:!1,responsive:[{breakpoint:1115,settings:{variableWidth:!1,slidesToShow:1,slidesToScroll:1}}]});var e=window.location.href;$("ul li").each(function(){var t=$(this).find("a").first().attr("href");e==t&&($(this).addClass("active"),$(this).find("a").first().removeAttr("href"),$(this).parents("li").addClass("active"))}),$(".search__btn__in").click(function(){$(".search__form,.search__btn__out").fadeIn(0),$(".search").addClass("active"),$(this).attr("data-click-state",0),$(this).parents(".header").removeClass("active")}),$(".search__btn__out").click(function(){$(".search__btn__out").fadeOut(0),$(".search__form").fadeOut(0),$(".search").removeClass("active")}),$(".burger").on("click",function(){1==$(this).attr("data-click-state")?$(this).attr("data-click-state",0):$(this).attr("data-click-state",1),$(this).parents(".header").toggleClass("active")}),$("a.parent").click(function(){$(this).parent("li").toggleClass("active"),$(this).siblings("ul").slideToggle()}),$(".menu li").each(function(){0<$(this).find("ul").length&&$(this).find("a").first().addClass("parent")}),$('.scroll[href^="#"]').click(function(){return $("html, body").animate({scrollTop:$($(this).attr("href")).offset().top},{duration:600,easing:"swing"}),!1}),new WOW({mobile:!1,live:!0}).init(),$("input,textarea").on("input keyup",function(){""==$(this).val()?($(this).removeClass("true"),$(this).addClass("false")):($(this).removeClass("false"),$(this).addClass("true"))}),$(".js-search-table").on("input",function(){var t=$(this).val().toLowerCase();t.length<=0?$("tbody tr").show(0):$("tbody tr").each(function(){$(this).text().toLowerCase().indexOf(t)<0?$(this).hide(0):$(this).show(0)})}),$(".js-search-items").on("input",function(){var t=$(this).val().toLowerCase();t.length<=0?$(".js-search-find .item").show(0):$(".js-search-find .item").each(function(){$(this).text().toLowerCase().indexOf(t)<0?$(this).hide(0):$(this).show(0)})}),$(".js-menu-toggle").click(function(){$(".js-menu-section").toggleClass("office--active"),$(".js-menu-toggle").toggleClass("js--active"),$(".btn--fullpage").toggleClass("active")}),new isvek.Bvi({target:".bvi-panel-open",fontSize:24,theme:"black"}),0<$(".js-tel_mask").length&&$(".js-tel_mask").inputmask({mask:"+7 (999) 999-99-99",greedy:!0,clearMaskOnLostFocus:!0,clearIncomplete:!0})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
